def minimax(node, depth, maximizingPlayer):
    if depth == 0 or node.is_terminal():
        return node.evaluate(), None
    
    if maximizingPlayer:
        max_eval = float('-inf')
        best_move = None
        for child in node.generate_children():
            eval, _ = minimax(child, depth - 1, False)
            if eval > max_eval:
                max_eval = eval
                best_move = child.move
        return max_eval, best_move
    else:
        min_eval = float('inf')
        best_move = None
        for child in node.generate_children():
            eval, _ = minimax(child, depth - 1, True)
            if eval < min_eval:
                min_eval = eval
                best_move = child.move
        return min_eval, best_move